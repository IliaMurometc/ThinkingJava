第十二章: 排序
edu.colorado.ch12.sort

二次排序算法
	选择排序 插入排序
递归排序算法
	归并排序 快速排序
	
选择排序
Select
选择一个最大的,依次往后插

插入排序
Insert
每次获得一个元素,构建另一个有序列表
理解成2个数组,将1个数组按顺序插入到另1个数组中
	
归并排序
Mergesort
先分开排序,再将2个排序好的数组再排序
归并排序时间分析: O(n logN)

快速排序
Quicksort
需要自己实现
类似于归并排序,但有几点不同
	1. 将数组1分为2的方法比归并排序中使用的简单方法要复杂得多
	2. 将2个排序号的数组组合成1个有序数组的方法比归并排序的方法要琐碎
找到基准元素pivot
int partition(int[ ] data, int first, int n)
快速排序,选择一个基准元素非常重要

堆排序
堆排序组合了归并排序的时间效率和快速排序的空间效率
Heapsort
第一个任务是将要排序的数组转换成一个堆
堆是满足下列条件的二叉树:
	1. 结点元素要大于等于该结点的孩子元素
	2. 树是完全二叉树